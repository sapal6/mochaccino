# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_suite.ipynb (unless otherwise specified).

__all__ = ['Describe', 'It']

# Cell
from contextlib import ContextDecorator
from rich.console import Console
from fastcore.imports import *
from fastcore.foundation import *
from fastcore.basics import *
from fastcore.meta import *
from fastcore.test import *
from .callbacks import *

# Cell
class Describe(ContextDecorator):
    "contextmanager to describe a test suite"
    def __init__(self, desc: str, cbs=[ReporterCallback]):
        self.desc = desc
        self.cb_handler = CallbackHandler(cbs)

    def __enter__(self):
        "start the execution of the suite and do setup"
        #print(self.desc)
        if self.cb_handler.after_enter(self): cb_handler.after_enter(self)
        return self
    #TODO: create callbacks to check type, value,traceback and format report and termnial display
    def __exit__(self, type, value, traceback):
        "cleanup and exit the suite"
        #print(f'{self.desc} completed')
        #print(type, value, traceback, sep="\n")
        return True

# Cell
class It(ContextDecorator):
    "contextmanager to describe a test function"
    def __init__(self, desc: str, cbs=[ReporterCallback]):
        self.desc = desc
        self.cb_handler = CallbackHandler(cbs)

    def __enter__(self):
        "start the execution of the test"
        if self.cb_handler.after_enter(self): cb_handler.after_enter(self)
        return self
    #TODO: create callbacks to check type, value,traceback and format report and termnial display
    def __exit__(self, type, value, traceback):
        "cleanup and exit the test"
        #print(f'{self.desc} completed')
        #print(type, value, traceback, sep="\n")
        return True